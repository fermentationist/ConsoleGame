!function(){"use strict";const e=((e="ConsoleGame")=>{const t={getStorage:t=>{var n;if(!t)return localStorage;const o=null!==(n=localStorage.getItem(`${e}.${t}`))&&void 0!==n?n:"null";try{return JSON.parse(o)}catch(e){return o}},setStorage:(n,o,i=!1)=>{let a=o;const s=t.getStorage(n);return s&&"object"==typeof s&&"object"==typeof o&&i&&(a=Object.assign(Object.assign({},s),o)),localStorage.setItem(`${e}.${n}`,JSON.stringify(a)),a},removeStorage:t=>{localStorage.removeItem(`${e}.${t}`)}};return t})("ConsoleGame"),t=eval,n=(e,t)=>Math.floor(Math.random()*(t-e+1))+e,o=(...e)=>{let t,n;return e.map((e=>(t=e.toLowerCase(),n=[t,`${t.charAt(0).toUpperCase()}${t.slice(1)}`,t.toUpperCase()],e.length?n:""))).join(",")},i=(e,t,n="")=>{let i=[];if(t){i=((null==t?void 0:t[e])||[]).map((e=>o(e)))}return`${o(e)}${i.length?","+i.join():""}${n?","+n:""}`},a=(e,n=!0)=>{if("function"==typeof e){const n=String(e);try{return t(n)}catch(t){return e}}if(null===e||"object"!=typeof e)return e;if(Array.isArray(e))return e.map((e=>a(e)));if(e instanceof Date)return new Date(e.getTime());if(e instanceof RegExp)return new RegExp(e);if(e instanceof Map){const t=new Map;return e.forEach(((e,n)=>{t.set(n,a(e))})),t}if(e instanceof Set){const t=new Set;return e.forEach((e=>{t.add(a(e))})),t}const o=Object.create(Object.getPrototypeOf(e));return Object.getOwnPropertyNames(e).forEach((t=>{const i=Object.getOwnPropertyDescriptor(e,t)||{};if(n&&!1===i.writable&&(i.writable=!0),"value"in i)try{i.value=a(i.value)}catch(e){}Object.defineProperty(o,t,i)})),Object.getOwnPropertySymbols(e).forEach((t=>{const n=Object.getOwnPropertyDescriptor(e,t)||{};if(n.value)try{n.value=a(n.value)}catch(e){}Object.defineProperty(o,t,n)})),o},s=(e,t=!1)=>{const n=e.length,o=t?"or":"and";return 0===n?"nothing":1===n?e[0]:2===n?`${e[0]} ${o} ${e[1]}`:`${e[0]}, ${s(e.slice(1),t)}`};let r=Object.keys(localStorage).some((e=>-1!==e.indexOf("ConsoleGame.prefs")));console.log(r?"user preferences applied.":"no user preferences detected.");let l=localStorage.getItem("ConsoleGame.prefs.font")||"monaco",h=localStorage.getItem("ConsoleGame.prefs.color")||"#32cd32",d=localStorage.getItem("ConsoleGame.prefs.size")||"100%",c=`font-size:calc(1.2 *${d});color:${h};font-family:${l};line-height:1.5;`;var u={error:{style:`\n      font-size:calc(1.2 * ${d});\n      color:red;\n      font-family:${l};\n      line-height:1.5;\n    `,logType:"error"},h1:{style:`\n      font-size:125%;\n      color:pink;\n      font-family:${l};\n    `,logType:"log"},intro:{style:`\n      font-size:calc(1.25 * ${d});\n      color:orange;\n      font-family:${l};\n      padding:0 1em;\n      line-height:1.5;\n    `,logType:"log"},cursive:{style:`\n      font-size:calc(1.2 * ${d});\n      font-family:cursive;\n      font-weight:bold;\n      color:lightgray;\n      background-color:black;\n      line-spacing:2em;\n      padding:1em;\n      margin:0 auto  0 0;\n      white-space:pre-wrap;\n      text-align:center;\n    `,logType:"log"},note:{style:`\n      font-size:calc(1.2 * ${d});\n      font-family:courier new;\n      color:#75715E;\n      background-color:white;\n      line-spacing:2em;\n      padding:0 1em 1em 0;\n      margin:0 auto  0 0;\n      white-space:pre-wrap;\n    `,logType:"log"},warning:{style:`\n      font-size:calc(1.15 * ${d});\n      color:orange;\n      font-family:${l};\n    `,logType:"warn"},papyracy:{style:`\n      font-size:calc(1.4 * ${d});\n      color:beige;\n      font-family:Papyrus;\n    `,logType:"log"},p:{style:c,logType:"log"},tiny:{style:`\n      font-size:calc(0.5 * ${d});\n      color:#75715E;\n      font-family:${l};\n    `,logType:"log"},info:{style:`\n    font-size:calc(1.15*${d});\n    padding:0.5em 1em 0 0.5em;\n    font-family:${l};\n  `,logType:"log"},invalid:{style:`\n    font-size:calc(1.2 * ${d});\n    color:red;\n    font-family:${l};\n    padding:0 1em;\n  `,logType:"log"},inventory:{style:`\n      font-size:calc(1.2 * ${d});\n      color:cyan;\n      font-family:${l};\n      padding:0 1em;\n    `,logType:"log"},title:{style:`\n      font-size:calc(2.5 * ${d});\n      font-weight:bold;\n      color:orangered;\n      text-shadow:orange 2px 2px 5px;\n      goldenrod -2px -2px 5px;\n      font-family:Courier;\n      padding:0 1em;\n      margin:0 auto 0 35%;\n      border: 2px dashed goldenrod;\n    `,logType:"log"},win:{style:`\n      font-size:calc(2.5 * ${d});\n      font-weight:bold;\n      color:gold;\n      text-shadow:orange 2px 2px 5px;\n      goldenrod -2px -2px 5px;\n      font-family:Courier;\n      padding:0 1em;\n      animation:flashing 0.8s infinite;\n    `,logType:"log"},header:{style:`\n      font-size:calc(1.25 * ${d});\n      font-weight:bold;\n      color:${h};\n      font-family:${l};\n      padding:0 1em;\n    `,logType:"log"},groupTitle:{style:`\n      font-size:calc(1.25 * ${d});\n      color:#75EA5B;\n      font-family:${l};\n    `,logType:"group"},codeInlineBaseStyle:`\n    font-size:calc(1.15*${d});\n    font-family:${l};\n    font-weight:inherit;\n    line-height:1.5;\n    padding-top:0.5em;\n  `,codeInlineCodeStyle:`\n    font-family:courier;\n    font-weight:bold;\n    line-height:1.5;\n    padding-top:0.5em;\n    font-size:calc(1.35*${d});\n    color:lime;\n  `,getDigiStyle:()=>`\n    font-family:'monaco', 'Consolas', 'Lucida Console', 'Courier New', monospace;\n    color:rgb(${255-n(0,10)}, ${68+n(0,10)}, ${0+n(0,10)});\n    font-size:${1.5+Math.random()/4}em;\n    opacity:${1-Math.random()/2};\n  `,getScreamStyle:e=>`\n    font-family:'courier new';\n    color:rgb(${255+n(0,10)}, ${33+n(0,10)}, ${33+n(0,10)});\n    font-size:${1.2+e/3}em;\n  `},m=["Arial","Arial Black","Arial Narrow","Arial Rounded MT Bold","Avant Garde","Calibri","Candara","Century Gothic","Franklin Gothic Medium","Futura","Geneva","Gill Sans","Helvetica","Impact","Lucida Grande","Optima","Segoe UI","Tahoma","Trebuchet MS","Verdana","Big Caslon","Bodoni MT","Book Antiqua","Calisto MT","Cambria","Didot","Garamond","Georgia","Goudy Old Style","Hoefler Text","Lucida Bright","Palatino","Perpetua","Rockwell","Rockwell Extra Bold","Baskerville","Times New Roman","Consolas","Courier New","Lucida Console","Lucida Sans Typewriter","Monaco","Andale Mono","Copperplate","Papyrus","Brush Script MT"];const p=()=>{const e=Math.random()>.85;return{foreground:e?y(0,64):f([64,64,64],128),background:e?y(192,255):f([255,255,255],75),border:e?y(0,128):f([128,128,128],128)}},g=(e=3,t=1)=>`padding: ${Math.random()*e+t}px ${Math.random()*e+t}px ${Math.random()*e+t}px ${Math.random()*e+t}px;`,f=([e,t,n]=[128,128,128],o=25)=>{const i=(e,t)=>{const n=Math.floor(Math.random()*t),o=Math.random()>=.5?-1*n:n;return Math.max(Math.min(255,e+o),0)};return[i(e,o),i(t,o),i(n,o)]},y=(e,t)=>{const n=Math.floor(Math.random()*(t-e)+e);return[n,n,n]},b=e=>e.split("").map((e=>{const t=Math.random();return t<.25?e:t<.66?e.toUpperCase():e.toLowerCase()})).join(""),v=e=>{const t=Math.random()>.45?1.75*Math.random():0,[n,o,i]=e||f([128,128,128],128),a=`rgb(${n}, ${o}, ${i})`;return`text-shadow: -${t}px -${t}px ${a}, ${t}px -${t}px ${a}, -${t}px ${t}px ${a}, ${t}px ${t}px ${a};`},k=()=>{const e=Math.floor(Math.random()*m.length);return m[e]},w=(e,t)=>{const n=e.map((e=>`%c${e}`)).join("");console.log(n,...t)},T=function(e,t,n="log"){window.CONSOLE_GAME_DEBUG&&window.debugLog.push({gameOutput:e}),Array.isArray(e)&&Array.isArray(t)?w(e,t):console[n](`%c${e}`,t)},$=e=>{const t=u.codeInlineBaseStyle,n=u.codeInlineCodeStyle;if("string"==typeof e)T(e,n);else{const o=Array(e.length).fill(t).map(((e,t)=>t%2!=0?n:e));T(e,o)}},M=e=>{const t=e.toUpperCase().split("").join(" ").split(""),n=t.map((e=>u.getDigiStyle()));T(t,n)},x=e=>{console.table(e.map((e=>e.join(""))))},_=e=>{const t=[...e],n=t.map(((e,t)=>u.getScreamStyle(t)));T(t,n)},I=e=>{const[t,n]=(e=>{const t=[...b(e)],n=`background-color: unset;font-size:${Math.random()}em`,o=t.map((e=>{const{foreground:t,background:o,border:i}=p(),[a,s,r]=t,[l,h,d]=o,c=`font-family:${k()};color:rgb(${a}, ${s}, ${r});font-size:${3+Math.random()/2}em;line-height:${Math.random()+.5}em;background-color:rgb(${l}, ${h}, ${d});${g()}${v(i)}`;return" "===e?n:c}));return[t.join(" ").split(""),o.map((e=>[e,`font-size:${1+Math.random()}em;`])).flat().slice(0,-1)]})(e);w(t,n)},C=(()=>{window.debugLog=[];const e={inline:w,codeInline:$,digi:M,map:x,scream:_,custom:T,ransom:I,table:console.table,groupCollapsed:console.groupCollapsed,groupEnd:console.groupEnd};for(const t in u){const n=u[t];if("object"==typeof n){const{style:o,logType:i}=n;e[t]=e=>T(e,o,i)}}return e})(),E=["Max","Buddy","Charlie","Jack","Cooper","Rocky","Toby","Tucker","Jake","Bear","Duke","Teddy","Oliver","Riley","Bailey","Bentley","Milo","Buster","Cody","Dexter","Winston","Murphy","Leo","Lucky","Oscar","Louie","Zeus","Henry","Sam","Harley","Baxter","Gus","Sammy","Jackson","Bruno","Diesel","Jax","Gizmo","Bandit","Rusty","Marley","Jasper","Brody","Roscoe","Hank","Otis","Bo","Joey","Beau","Ollie","Tank","Shadow","Peanut","Hunter","Scout","Blue","Rocco","Simba","Tyson","Ziggy","Boomer","Romeo","Apollo","Ace","Luke","Rex","Finn","Chance","Rudy","Loki","Moose","George","Samson","Coco","Benny","Thor","Rufus","Prince","Chester","Brutus","Scooter","Chico","Spike","Gunner","Sparky","Mickey","Kobe","Chase","Oreo","Frankie","Mac","Benji","Bubba","Champ","Brady","Elvis","Copper","Cash","Archie","Walter","Bella","Lucy","Daisy","Molly","Lola","Sophie","Sadie","Maggie","Chloe","Bailey","Roxy","Zoey","Lily","Luna","Coco","Stella","Gracie","Abby","Penny","Zoe","Ginger","Ruby","Rosie","Lilly","Ellie","Mia","Sasha","Lulu","Pepper","Nala","Lexi","Lady","Emma","Riley","Dixie","Annie","Maddie","Piper","Princess","Izzy","Maya","Olive","Cookie","Roxie","Angel","Belle","Layla","Missy","Cali","Honey","Millie","Harley","Marley","Holly","Kona","Shelby","Jasmine","Ella","Charlie","Minnie","Willow","Phoebe","Callie","Scout","Katie","Dakota","Sugar","Sandy","Josie","Macy","Trixie","Winnie","Peanut","Mimi","Hazel","Mocha","Cleo","Hannah","Athena","Lacey","Sassy","Lucky","Bonnie","Allie","Brandy","Sydney","Casey","Gigi","Baby","Madison","Heidi","Sally","Shadow","Cocoa","Pebbles","Misty","Nikki","Lexie","Grace","Sierra"],S={bed:["bedframe","mattress"],booklet:["catalog","catalogue","book","program"],bookshelves:["bookshelf","shelf","shelves"],burn:["ignite","incinerate","immolate"],collar:["dog_collar","leash"],contemplate:["consider","meditate","think","cogitate","cerebrate","ponder","excogitate","muse","reflect","mull","ruminate"],cup:["chalice","goblet"],disc:["record","album","forty-five","disk","recording","litany"],drink:["intake","uptake","imbibe","chug","guzzle","quaff"],drop:["unload","discharge","dismiss","shed","discard","release","shitcan","trash","expel","abandon","forsake"],eat:["ingest","consume","swallow","devour"],examine:["analyze","analyse","study","investigate","inspect","scan","search"],extinguish:["douse"],film:["movie","reel","cartridge","film_cartridge"],glove:["mitt","gloves","handwear","mitten","mittens"],go:["travel","locomote","proceed","depart","exit","leave","run"],grue_repellant:["repellant","aerosol"],help:["assistance","support","ayuda"],inventory:["booty","bounty","hoard","possessions","belongings"],lantern:["lamp","torch"],listen:["hear"],lock:["deadbolt"],look:["see","observe","status"],maps:["map","plan","plans","blueprints","blueprint"],matchbook:["matches","match"],move:["displace","upend","push"],note:["letter","missive","paper","epistle","treatise"],open:["unclose"],painting:["canvas","artwork"],phonograph:["record_player","turntable"],photo:["photograph","picture","pic","portrait","frame","picture_frame"],pull:["tug","yank","jerk"],read:["skim","peruse"],safe:["alcove","strongbox","vault","wall_safe"],scroll:["strap","parchment","spell"],smell:["sniff"],spray:["squirt","spurt","spirt","scatter","sprinkle","disperse","dispense"],start:["begin","commence"],take:["acquire","steal","purloin","pilfer","obtain","gank","get","appropriate","arrogate","confiscate","retrieve","remove"],toilet:["commode","crapper","loo","head"],turn:["flip","rotate","revolve","twist"],use:["activate","utilize","utilise","apply","employ","exploit","expend"],wait:["abide","await","delay","tarry","chill","exist","dawdle","dillydally","loiter","pause","rest","relax","remain","hesitate","procrastinate","sit"],yell:["shout","scream","cry"]},O=Object.entries(S).reduce(((e,t)=>[...e,...t[1]]),[]),j=O.filter(((e,t)=>O.indexOf(e)!==t));if(j.length)throw Error(`Duplicates found in thesaurus.js:\n${j}`);var z=function(){const e=["****************","****************","****************","****************","****************","****************","****************","****************","****************","****************","****************","****************","****************","****************","****************","****************"];return[e,["****************","****************","****************","****************","****************","****************","****************","****************","****************","*******CI*******","******)B********","****************","****************","****************","****************","****************"],["****************","****************","****************","****************","****************","****************","****************","****************","****************","****************","******(*********","****************","****************","****************","****************","****************"],["****************","****************","****************","****************","****************","****************","****************","****************","****************","********ZZae].map((e=>e.map((e=>[...e]))))}();var A={_glove:["_matchbook"],_safe:["_key","_scroll"],_drawer:["_film"],_nightstand_drawer:["_old_key"],_wardrobe:["_grue_repellant"],_dresser_drawer:["_booklet"]},Y={_all:'(game) => {\n    return {\n        name: "all",\n        listed: false,\n        takeable: false,\n        take() {\n            game.state.objectMode = false;\n            const all = game.state.combinedEnv;\n            all.forEach((item) => {\n                return item.takeable ? (item.take && item.take()) : null;\n            });\n        },\n        drop() {\n            game.state.objectMode = false;\n            const all = game.state.inventory.filter((it) => !["no_tea", "me"].includes(it.name)); // filter out "no_tea" (you can\'t drop it)\n            all.forEach((item) => {\n                item.drop && item.drop();\n            });\n        }\n    };\n}',_backdoor:'{"name":"door","locked":true,"proto":"door","unlockedBy":"key","lockedTarget":"a","closedTarget":"a"}',_basement_door:'{"name":"door","locked":true,"closed":true,"listed":true,"proto":"door","unlockedBy":"old_key","lockedTarget":"I","closedTarget":"I"}',_bathtub:'(game) => {\n    return {\n        name: "bathtub",\n        takeable: false,\n        description: "The old cast iron tub rests atop four taloned feet. It does not look functional.",\n        use() {\n            game.log.p("This is hardly an appropriate time for a bath!");\n        }\n    };\n}',_bed:'(game) => {\n    return {\n        name: "bed",\n        flammable: true,\n        takeable: false,\n        listed: false,\n        description: "The antique bedframe is made of tubular bronze. There are not any sheets or blankets or pillows on the old, stained, queen-sized mattress that rests atop it.",\n        burn() {\n            Object.getPrototypeOf(this).burnDown.call(this);\n        },\n    };\n}',_booklet:'(game) => {\n    return {\n        name: "booklet",\n        article: "a",\n        flammable: true,\n        description: "This booklet appears to be the exhibition catalogue for some fancy art show. ",\n        read() {\n            game.state.objectMode = false;\n            if (!game.inInventory(this.name)) {\n                return game.log.p(`You will need to pick up the ${this.name} first.`);\n            }\n            game.displayItem({\n                title: "Ministry of Culture",\n                artist: "Isak Berbic, Emiliano Cerna-Rios, Dennis Hodges and Zdenko Mandusic",\n                year: "2008",\n                info: "Exhibition catalog",\n                source: "https://drive.google.com/file/d/1pJcIPQZxY1JhRZ3ssV-EPL6eWY-XLdpI/preview",\n                width: "800px",\n                height: "800px"\n            });\n        }\n    };\n}',_books:'(game) => {\n    return {\n        name: "books",\n        listed: false,\n        takeable: false,\n        description: "While you notice many of the titles as familiar works of classic literature, nothing stands out as being of particular interest.",\n        read() {\n            game.log.p("You cannot possibly read all of these books, and considering you have been abducted by persons unknown and are trapped in a strange house, you have neither the presence of mind, nor the time to sit down with a good book right now.");\n        },\n        proto: "bookshelves",\n    };\n}',_bookshelves:'{"name":"bookshelves","listed":false,"takeable":false,"article":"some","description":"Wooden bookshelves line one wall of the study, reaching from floor to ceiling. There are hundreds of moldering, hardcover books lining the shelves."}',_chain:'(game) => {\n    return {\n        name: "chain",\n        weight: 0,\n        description: "The thin ball chain dangling in front of you is exactly the sort often connected to a lightbulb. Perhaps you should \\"pull\\" it...",\n        takeable: false,\n        listed: false,\n        pull() {\n            game.state.objectMode = false;\n            let dark = game.state.currentMapCell.hideSecrets;\n            dark ? game.log.p("An overhead lightbulb flickers on, faintly illuminating the room.") : game.log.p("The lightbulb is extinguished.");\n            game.state.currentMapCell.hideSecrets = !dark;\n            return game.describeSurroundings();\n        },\n        use() {\n            return this.pull();\n        }\n    };\n}',_chair:'(game) => {\n    return {\n        name: "chair",\n        takeable: false,\n        description: "It looks like a wooden chair– no more, no less.",\n        use() {\n            game.state.objectMode = false;\n            game.log.p("You sit down on the chair.");\n            const wait = game.commands._wait;\n            wait.call(this);\n        }\n    };\n}',_coffee_table:'(game) => {\n    return {\n        name: "coffee_table",\n        listed: false,\n        takeable: false,\n        description() {\n            return `The low, four-legged table has nothing on it${game.state.env.visibleEnv.includes("photo")\n                ? " except for a small, framed photo."\n                : "."}`;\n        },\n    };\n}',_collar:'(game) => {\n    return {\n        name: "collar",\n        points: 2,\n        description: `It is ${game.state.dogName}\'s collar! Whoever assaulted you and took your dog must have come this way!`,\n        smell() {\n            game.log.p("The collar smells like leather and scared doggie!");\n        }\n    };\n}',_cup:'{"name":"cup","weight":2,"description":"It is a small, golden cup with two finely wrought handles."}',_desk:'{"name":"desk","takeable":false,"openable":true,"closed":true,"containedPart":"_drawer","description":"The antique writing desk is six feet in length, and blanketed with dust. It has a single drawer on one side."}',_disc:'(game) => {\n    return {\n        name: "disc",\n        text: "Untitled (Litany)",\n        get description() {\n            return `It is a disc made of a shiny black polymer, lined with hundreds of tiny concentric grooves. It looks to be about seven inches in diameter, with a one and one-half inch hole in its center. It bears a label that says, "${this.text}".`;\n        },\n        play() {\n            if (!game.inEnvironment("phonograph") && !game.inInventory("phonograph")) {\n                game.log.p("First, you will need to find a phonograph.");\n                return;\n            }\n            return game.displayItem({\n                title: "\\nUntitled (litany)",\n                artist: "Dennis Hodges",\n                year: "2010",\n                info: "Found audio recordings",\n                source: "https://drive.google.com/file/d/1s02tHvAU0E7dMJgbhUnIPNg8ayWGNmxZ/preview?usp=sharing"\n            });\n        },\n        use() {\n            this.play.call(this);\n        },\n    };\n}',_dog:'{"name":"dog","points":50,"article":"a","takeable":true,"description":"Four legs. Barks.","rescue":"rescue() {\\n        Object.getPrototypeOf(this).take.call(this);\\n    }"}',_door:'(game) => {\n    return {\n        name: "door",\n        article: "a",\n        points: 20,\n        openable: true,\n        locked: false,\n        closed: true,\n        takeable: false,\n        listed: false,\n        unlockedBy: "key",\n        lockedTarget: "A",\n        closedTarget: "A",\n        get description() {\n            game.state.objectMode = false;\n            return `The massive wooden door, darkened with generations of dirt and varnish, is secured with a sturdy new deadbolt, which is ${!this.locked ? "unlocked." : "locked."}${this.closed ? "" : "\\nThe door is open."}`;\n        },\n    };\n}',_drawer:'(game) => {\n    const drawer = {\n        randomNumber: Math.floor(Math.random() * 10000),\n        name: "drawer",\n        listed: false,\n        openable: true,\n        closed: true,\n        takeable: false,\n        containedIn: "_desk",\n        contents: [],\n        get description() {\n            return this.closed\n                ? "The drawer is closed."\n                : `The drawer is open. There is ${this.contents.length < 1\n                    ? "nothing"\n                    : game.formatList(this.contents.map((item) => `${item.article} ${item.name}`))} inside.`;\n        },\n        open() {\n            if (this.closed) {\n                Object.getPrototypeOf(this).open.call(this);\n            }\n            if (game.items[this.containedIn].closed) {\n                game.items[this.containedIn].closed = false;\n            }\n        },\n        close() {\n            if (!this.closed) {\n                Object.getPrototypeOf(this).close.call(this);\n            }\n            if (!game.items[this.containedIn].closed) {\n                game.items[this.containedIn].closed = true;\n            }\n        },\n    };\n    return drawer;\n}',_dresser:'(game) => {\n    return {\n        name: "dresser",\n        takeable: false,\n        openable: true,\n        closed: true,\n        listed: true,\n        proto: "desk",\n        containedPart: "_dresser_drawer",\n        contents: [],\n        get description() {\n            return `The modest wooden dresser is of simple design. The pale blue milk paint that coats it is worn through in several spots from use. It has a large drawer, which is ${this.closed ? "closed" : "open"}.`;\n        },\n        open() {\n            const proto = Object.getPrototypeOf(this);\n            const urOpen = Object.getPrototypeOf(proto).open.bind(this);\n            urOpen.call(this); // open method from prototype\'s prototype\n            proto.open.call(this); // open method of prototype\n        },\n        close() {\n            const proto = Object.getPrototypeOf(this);\n            const urClose = Object.getPrototypeOf(proto).close.bind(this);\n            urClose.call(this); // close method from prototype\'s prototype\n            proto.close.call(this); // open method of prototype\n        },\n    };\n}',_dresser_drawer:'(game) => {\n    return {\n        name: "drawer",\n        takeable: false,\n        openable: true,\n        closed: true,\n        listed: false,\n        proto: "drawer",\n        containedIn: "_dresser",\n        contents: [],\n        open() {\n            const proto = Object.getPrototypeOf(this);\n            const urOpen = Object.getPrototypeOf(proto).open.bind(this);\n            urOpen.call(this); // open method from prototype\'s prototype\n            proto.open.call(this); // open method of prototype\n        },\n        close() {\n            const proto = Object.getPrototypeOf(this);\n            const urClose = Object.getPrototypeOf(proto).close.bind(this);\n            urClose.call(this); // close method from prototype\'s prototype\n            proto.close.call(this); // open method of prototype\n        },\n    };\n}',_film:'(game) => {\n    return {\n        name: "film",\n        listed: true,\n        flammable: true,\n        article: "a reel of",\n        text: "Canned Laughs",\n        description: \'The Super 8 film cartridge is made primarily of a clear, smoky plastic body containing a single spool of developed film. It looks a lot like an audio cassette tape, though it is a little thicker, and it is square instead of being merely rectangular. The title, "Canned Laughs", is hand written on a curling paper label.\',\n        play() {\n            if (!game.inEnvironment("projector") && !game.inInventory("projector")) {\n                game.log.p("First, you will need to find something to project the film with.");\n                return;\n            }\n            if (!game.inEnvironment("screen") && !game.inInventory("screen")) {\n                game.log.p("You are going to need a screen to project onto.");\n                return;\n            }\n            return game.displayItem({\n                title: "\\nCanned Laughs",\n                artist: "Dennis Hodges",\n                year: "2001",\n                info: "Super 8mm film to video transfer with dubbed audio",\n                source: "https://drive.google.com/file/d/1loiWbLQgHVVoCtJVscJe2sYiPle8u7Tf/preview?usp=sharing",\n                width: "720px",\n                height: "480px",\n            });\n        },\n        use() {\n            this.play.call(this);\n        },\n        project() {\n            this.play.call(this);\n        },\n    };\n}',_filthy_note:'{"name":"note","text":"Dear John,\\nI\'m leaving. After all of this time, I said it. But I want you to understand that it is not because of you, or something you\'ve done (you have been a loving and loyal partner). It is I who have changed. I am leaving because I am not the person who married you so many years ago; that, and the incredibly low, low prices at Apple Cabin. Click here ==> http://liartownusa.tumblr.com/post/44189893625/apple-cabin-foods-no-2 to see why I prefer their produce for its quality and respectability.","description":"A filthy note you found on the floor of a restroom. Congratulations, it is still slightly damp. Despite its disquieting moistness, the text is still legible."}',_glove:'(game) => {\n    return {\n        name: "glove",\n        closed: true,\n        points: 1,\n        description: "It is a well-worn gray leather work glove. There is nothing otherwise remarkable about it.",\n        contents: [],\n        examine() {\n            game.state.objectMode = false;\n            if (this.contents.length) {\n                const hiddenItem = this.contents.pop();\n                game.log.p(`${this.description}\\nAs you examine the glove, a ${hiddenItem.name} falls out, onto the floor.`);\n                game.state.currentMapCell.addToEnv(hiddenItem.name);\n                return;\n            }\n            return this.description;\n        }\n    };\n}',_grue:'(game) => {\n    return {\n        name: "grue",\n        listed: false,\n        takeable: false,\n        turns: 3,\n        description: "No adventurer who has seen a grue has yet lived to tell of it.",\n        lurk() {\n            if (!game.state.currentMapCell.hideSecrets) {\n                return;\n            }\n            const valarMorgulis = Math.random() >= 0.25;\n            if (valarMorgulis && this.turns < 1) {\n                game.dead("Oh no! You have walked into the slavering fangs of a lurking grue!");\n            }\n            this.turns--;\n            return;\n        },\n    };\n}',_grue_repellant:'(game) => {\n    return {\n        name: "grue_repellant",\n        defective: Math.random() < 0.03,\n        weight: 3,\n        count: 3,\n        points: 3,\n        article: "some",\n        description: "A 12oz can of premium aerosol grue repellant. This is the good stuff. Grues genuinely find it to be somewhat off-putting.",\n        use() {\n            game.state.objectMode = false;\n            if (!game.inInventory(this.name)) {\n                return game.inEnvironment(this.name) ? game.log.p("You will need to pick it up first.") : game.log.p("You don\'t see that here.");\n            }\n            else if (this.used) {\n                return game.log.p("Sorry, but it has already been used.");\n            }\n            else if (this.defective) {\n                this.used = true;\n                return game.log.p("Nothing happens. This must be one of the Math.random() < 0.03 of grue_repellant cans that were programmed to be, I mean, that were accidentally manufactured defectively. Repeated attempts to coax repellant from the aerosol canister prove equally fruitless.");\n            }\n            else {\n                this.used = true;\n                this.activated = true;\n                game.state.repellantMode = true;\n                return game.log.p("A cloud of repellant hisses from the canister, temporarily obscuring your surroundings. By the time it clears, your head begins to throb, and you feel a dull, leaden taste coating your tongue. The edges of your eyes and nostrils feel sunburnt, and there is also a burning sensation to accompany an unsteady buzzing in your ears. Although you are not a grue, you find it to be more than somewhat off-putting.");\n            }\n        },\n        spray() {\n            game.state.objectMode = false;\n            return this.use();\n        },\n        drink() {\n            game.state.objectMode = false;\n            game.dead("Drinking from an aerosol can is awkward at best, but still you manage to ravenously slather your chops with the foaming grue repellant. You try to enjoy the searing pain inflicted by this highly caustic (and highly toxic!) chemical as it dissolves the flesh of your mouth and throat, but to no avail. It is not delicious, and you are starting to realize that there are some non-trivial drawbacks to willingly ingesting poison. Oops.");\n        },\n        decrementCounter() {\n            if (this.activated && this.count > 0) {\n                --this.count;\n                if (this.count === 0) {\n                    game.log.p("The grue repellant has probably worn off by now.");\n                    this.activated = false;\n                    game.state.repellantMode = false;\n                    return;\n                }\n            }\n        }\n    };\n}',_key:'(game) => {\n    return {\n        name: "key",\n        points: 10,\n        description: "The shiny key is made of untarnished brass and looks new, like it could have been cut yesterday.",\n        use() {\n            const unlockable = game.state.combinedEnv.filter((item) => item.unlockedBy === this.name);\n            if (unlockable.length < 1) {\n                game.log.p(`There is nothing to unlock with the ${this.name}`);\n                return;\n            }\n            unlockable.forEach((item) => item.unlock());\n        },\n    };\n}',_keypad:'(game) => {\n    return {\n        name: "keypad",\n        takeable: false,\n        openable: true,\n        closed: true,\n        listed: false,\n        solution: null,\n        proto: "safe",\n        containedIn: "_safe",\n        closedTarget: "_safe",\n        contents: [],\n        description: "The keypad has a liquid crystal display screen and a row of buttons numbered 0 through 9.",\n    };\n}',_knife:'(game) => {\n    return {\n        name: "knife",\n        points: 1,\n        description: "The folding knife has a three inch locking blade and is small enough to fit in your pocket. It is designed to be a utility blade, and would probably make a poor weapon.",\n        use() {\n            game.log.p("The small knife is of no use here.");\n        },\n    };\n}',_lantern:'(game) => {\n    return {\n        name: "lantern",\n        flammable: false,\n        activated: false,\n        points: 5,\n        proto: "matchbook",\n        get description() {\n            return `The old brass lantern is the quaint sort that burns hydrocarbons to produce light. It is currently ${this.activated ? "lit." : "extinguished."}`;\n        },\n        use() {\n            game.state.objectMode = false;\n            if (!game.inInventory("matchbook")) {\n                game.log.p("You don\'t have the means to light a fire.");\n                return;\n            }\n            if (this.count === 0) {\n                game.log.p("The lantern appears to be out of fuel.");\n                return;\n            }\n            game.items._matchbook.closed = false;\n            this.activated = true;\n            this.count = 250;\n            game.log.p("Lighting the lantern with the match produces a brighter, longer lasting source of light.");\n        },\n        light() {\n            this.use.call(this);\n        },\n        burn() {\n            this.use.call(this);\n        },\n    };\n}',_maps:'(game) => {\n    return {\n        name: "maps",\n        article: "some",\n        points: 5,\n        get description() {\n            this.read();\n            return `The stack of dogeared pages appear to be architectural drawings. With a quick survey of your surroundings, you confirm with reasonable certainty that they are likely floor plans for this house.`;\n        },\n        read() {\n            game.state.objectMode = false;\n            if (!game.inInventory(this.name)) {\n                return game.log.p(`You will need to pick up the ${this.name} first.`);\n            }\n            const floorMap = game.getFloorMap();\n            game.log.map(floorMap);\n            game.displayHTMLMap(floorMap);\n            if (!game.turnDaemon.hasTimer("map")) {\n                game.turnDaemon.registerTimer("map", (gameContext) => {\n                    gameContext.displayHTMLMap(gameContext.getFloorMap());\n                });\n            }\n        },\n        use() {\n            this.read.call(this);\n        },\n    };\n}',_matchbook:'(game) => {\n    return {\n        name: "matchbook",\n        openable: true,\n        closed: true,\n        count: 3,\n        points: 7,\n        flammable: true,\n        get description() {\n            return `It is an old paper matchbook, of the type that used to be given away with packs of cigarettes, or printed with the name and telephone number of a business and used as marketing schwag. This particular specimen is beige, with black and white text that says \\"Magnum Opus\\" in a peculiar, squirming op-art font. ${this.closed\n                ? "It is closed, its cardboard cover tucked in."\n                : \'The cardboard cover is open, and you can see a handwritten message on the inside. It says, "THE OWLS ARE NOT WHAT THEY SEEM."\'}`;\n        },\n        decrementCounter() {\n            if (this.lightCount) {\n                --this.count;\n                if (this.count === 0) {\n                    game.log.p("Despite your best efforts the flame flickers out.");\n                    this.activated = false;\n                    return;\n                }\n            }\n        },\n        use() {\n            game.state.objectMode = false;\n            if (this.closed) {\n                this.open.call(this);\n                game.log.p("As you flip open the matchbook, folding back the cover, you glimpse something scrawled in pencil on the inside.");\n            }\n            game.log.p("You pluck out one of the paper matches. It ignites easily as you scrape its head against the red phosphorus strip, producing a tenuous flame that you are quick to guard with your cupped hand.");\n            this.count = 3;\n            this.activated = true;\n        },\n        light() {\n            this.use.call(this);\n        },\n    };\n}',_me:'(game) => {\n    return {\n        name: "me",\n        article: "",\n        takeable: false,\n        listed: false,\n        get description() {\n            const descriptionString = `Upon taking a quick inventory of your person and its component parts – everything seems to be accounted for and intact.`;\n            return descriptionString;\n        },\n    };\n}',_nightstand:'(game) => {\n    return {\n        name: "nightstand",\n        takeable: false,\n        openable: true,\n        closed: true,\n        listed: false,\n        proto: "desk",\n        containedPart: "_nightstand_drawer",\n        contents: [],\n        get description() {\n            return `The nightstand next to the bed is made of wood and is painted white. It has a single drawer, which is ${this.closed ? "closed" : "open"}.`;\n        },\n        open() {\n            const proto = Object.getPrototypeOf(this);\n            const urOpen = Object.getPrototypeOf(proto).open.bind(this);\n            urOpen.call(this); // open method from prototype\'s prototype\n            proto.open.call(this); // open method of prototype\n        },\n        close() {\n            const proto = Object.getPrototypeOf(this);\n            const urClose = Object.getPrototypeOf(proto).close.bind(this);\n            urClose.call(this); // close method from prototype\'s prototype\n            proto.close.call(this); // open method of prototype\n        },\n    };\n}',_nightstand_drawer:'(game) => {\n    return {\n        name: "drawer",\n        takeable: false,\n        openable: true,\n        closed: true,\n        listed: false,\n        proto: "drawer",\n        containedIn: "_nightstand",\n        contents: [],\n        open() {\n            const proto = Object.getPrototypeOf(this);\n            const urOpen = Object.getPrototypeOf(proto).open.bind(this);\n            urOpen.call(this); // open method from prototype\'s prototype\n            proto.open.call(this); // open method of prototype\n        },\n        close() {\n            const proto = Object.getPrototypeOf(this);\n            const urClose = Object.getPrototypeOf(proto).close.bind(this);\n            urClose.call(this); // close method from prototype\'s prototype\n            proto.close.call(this); // close method of prototype\n        },\n    };\n}',_no_tea:'(game) => {\n    return {\n        name: "no_tea",\n        weight: 0,\n        article: "",\n        description: "You do not have any tea.",\n        methodCallcount: 0,\n        takeable: false,\n        no_teaMethod(message) {\n            this.methodCallcount++;\n            game.state.objectMode = false;\n            game.log.p(message);\n            if (this.methodCallcount > 1 &&\n                game.state.pendingAction !== "contemplate") {\n                game.log.p("Perhaps you should take a moment to contemplate that.");\n            }\n        },\n        drink() {\n            return this.no_teaMethod("How do you intend to drink no tea?");\n        },\n        drop() {\n            return this.no_teaMethod("You can\'t very well drop tea that you don\'t have.");\n        },\n        take() {\n            return this.no_teaMethod("No tea isn\'t the sort of thing you can take.");\n        },\n        examine() {\n            return this.no_teaMethod(this.description);\n        },\n        frotz() {\n            return this.no_teaMethod(\'Unfortunately, you cannot "frotz" the no tea.\');\n        },\n        use() {\n            return this.no_teaMethod("Unsurprisingly, using the no tea has no effect.");\n        },\n        contemplate() {\n            if (this.methodCallcount > 2) {\n                game.state.score += 75;\n                game.winner("Having thoroughly contemplated the existential ramifications of no tea, you suddenly find that your being transcends all time and space.");\n            }\n            else {\n                return this.no_teaMethod("Let\'s not resort to that just yet!");\n            }\n        },\n    };\n}',_note:'(game) => {\n    return {\n        name: "note",\n        text: `We have your dog.`,\n        flammable: true,\n        firstRead: true,\n        description: "The note is composed of eclectically sourced, cut-out letters, in the style of a movie ransom note. You found it lying next to you on the floor when you regained consciousness.",\n        read() {\n            game.state.objectMode = false;\n            if (!game.inInventory(this.name)) {\n                return game.log.p(`You will need to pick up the ${this.name} first.`);\n            }\n            game.log.ransom(this.text);\n            if (this.firstRead) {\n                game.log.p(`Who would do such a thing to sweet little ${game.state.dogName}!?`);\n                game.log.p("You need to rescue your puppy and get out of this place before your attacker returns!");\n                this.firstRead = false;\n            }\n        },\n    };\n}',_old_key:'{"name":"old_key","points":5,"article":"an","description":"It is an old-fashioned key, made of heavy, tarnished bronze.","proto":"key"}',_painting:'(game) => {\n    return {\n        name: "painting",\n        takeable: true,\n        listed: false,\n        flammable: true,\n        description: "The small, grimy image is of an owl, teaching a class a classroom of kittens how to catch mice. The rendering of perspective is amateurish, and the depicted animals look hostile and disfigured. It is an awful painting.",\n        previouslyRevealed: false,\n        location: "+",\n        take() {\n            Object.getPrototypeOf(this).take.call(this);\n            this.revealText("When you remove the terrible painting, ");\n        },\n        revealText(text) {\n            if (!this.previouslyRevealed) {\n                game.log.p(text +\n                    "a small recess is revealed. Within the shallow niche is a small black wall safe, covered with countless shallow dents, scratches and abrasions.");\n                game.mapKey[this.location].hideSecrets = false;\n                this.previouslyRevealed = true;\n            }\n        },\n        move() {\n            this.revealText("When you move the terrible painting, ");\n        },\n        turn() {\n            this.move();\n        },\n        burn() {\n            game.state.objectMode = false;\n            if (!game.inInventory("matchbook")) {\n                // check for matchbook, exit if not in inventory\n                game.log.p("You don\'t have the means to light a fire.");\n                return;\n            }\n            // update the description of the painting to reflect the fact that it has been burned.\n            this.description =\n                "The painting is lying broken upon the floor. It is so badly burned now, that its subject has become indecipherable. What remains of the canvas is a carbonized black. You can\'t help but think that it is still an improvement compared to the original work.";\n            game.items._matchbook.closed = false; // matchbook remains open after use, if not already opened.\n            if (game.state.currentMapCell.hideSecrets) {\n                // if painting still on wall\n                this.revealText("Although the match nearly goes out before you can ignite the painting, a small flame finally finds a foothold on the canvas, and it is soon alarmingly ablaze. Thinking it unwise to burn down the house you are trapped in, you remove the painting from the wall, and stomp out the fire before it can spread any further. \\nWhen you look back at the wall that formerly held the burning painting, ");\n                return;\n            }\n            // if painting already removed from wall\n            this.revealText("Although the match nearly goes out before you can ignite the painting, a small flame finally finds a foothold on the canvas, and it is soon alarmingly ablaze. You are suddenly inspired to end your ill-considered, if brief flirtation with pyromania, and promptly stomp out the fire before they can spread any further.");\n            return;\n        },\n    };\n}',_pedestal:'{"name":"pedestal","proto":"table","description":"It is a simple wooden plinth, painted white."}',_phonograph:'(game) => {\n    return {\n        name: "phonograph",\n        description: "The old phonograph has a built-in speaker, and looks like it might still work.",\n        play() {\n            if (!game.inEnvironment("disc") && !game.inInventory("disc")) {\n                game.log.p("First, you will need to find something to play on the phonograph.");\n                return;\n            }\n            return game.items._disc.play.call(this);\n        },\n        use() {\n            this.play.call(this);\n        },\n    };\n}',_photo:'(game) => {\n    return {\n        name: "photo",\n        description: "The four by six inch photograph is in a cheap frame made of painted fiberboard. It\'s a portrait of a very old, and probably infirm black poodle, bluish cataracts clouding its eyes. There is some writing on the back of the frame.",\n        get reverseDescription() {\n            return `There is a handwritten inscription on the back of the frame${game.inInventory(this.name)\n                ? \'. It says, "My Precious Muffin\\\'s 18th Birthday - 10/28/17"\'\n                : ""}.`;\n        },\n        points: 3,\n        text: "My Precious Muffin\'s 18th Birthday - 10/28/17",\n        read() {\n            game.state.objectMode = false;\n            if (!game.inInventory(this.name)) {\n                return game.log.p(`You will need to pick up the ${this.name} first.`);\n            }\n            game.log.p(`The text on the ${this.name} reads: \\n`);\n            return game.log.cursive(this.text);\n        },\n    };\n}',_projector:'(game) => {\n    return {\n        name: "projector",\n        description: "It took you a moment to even recognize the brown plastic box as a film projector. It was designed for consumer use, to display Super 8mm film cartridges of the type that were once used to make home movies in the 1970\'s.",\n        play() {\n            if (!game.inEnvironment("film") && !game.inInventory("film")) {\n                game.log.p("First, you will need to find something to project with the projector.");\n                return;\n            }\n            if (!game.inEnvironment("screen") && !game.inInventory("screen")) {\n                game.log.p("You are going to need a screen to project onto.");\n                return;\n            }\n            return game.items._film.play.call(this);\n        },\n        use() {\n            this.play.call(this);\n        },\n        project() {\n            this.play.call(this);\n        },\n    };\n}',_safe:'(game) => {\n    return {\n        name: "safe",\n        points: 10,\n        closed: true,\n        openable: true,\n        locked: true,\n        listed: false,\n        takeable: false,\n        solution: "10281999",\n        description: "The wall safe looks rugged and well-anchored. You doubt that it could be breached by brute force, and it appears to have already successfully weathered a few such attempts. On its face, a numeric keypad resides beneath what looks like a small digital readout.",\n        contents: [],\n        containedPart: "_keypad",\n        correctGuess() {\n            game.state.objectMode = false;\n            this.locked = false;\n            this.closed = false;\n            game.log.digi("PASSCODE ACCEPTED.");\n            game.log.p("Upon entering the correct passcode, the bolt inside the safe\'s door slides back, and the door pops open gently.");\n            if (this.contents.length > 0) {\n                game.log.p(`Inside the safe is ${game.formatList(this.contents.map((item) => `${item.article} ${item.name}`))}.`);\n            }\n        },\n        incorrectGuess() {\n            game.state.objectMode = false;\n            game.log.digi("PASSCODE INCORRECT");\n        },\n        open() {\n            if (this.locked) {\n                this.unlock.call(this);\n            }\n            else {\n                Object.getPrototypeOf(this).open.call(this);\n            }\n        },\n        lock() {\n            game.state.objectMode = false;\n            this.closed = true;\n            this.locked = true;\n            game.log.p("You lock the wall safe.");\n        },\n        unlock() {\n            game.state.solveMode = true;\n            game.state.objectMode = false;\n            if (!this.locked) {\n                game.log.p("The safe is already unlocked.");\n            }\n            else {\n                game.log.codeInline([\n                    `To enter the 8-digit numerical passcode, you must type an underscore `,\n                    `_`,\n                    `, followed by the value enclosed in parentheses or backticks.`,\n                ]);\n                game.log.codeInline([`For example: `, `_(01234567)`, ` or `, "_`01234567`"]);\n                game.log.digi("ENTER PASSCODE:");\n            }\n        },\n        use() {\n            this.unlock.call(this);\n        },\n    };\n}',_screen:'{"name":"screen","takeable":true,"description":"It is the type of portable movie screen that rolls up into itself like an old window shade."}',_scroll:'(game) => {\n    return {\n        name: "scroll",\n        flammable: true,\n        points: 10,\n        description: \'There is some small text, printed on a thin leather strap that was used to bind the rolled up scroll. It says, "rezrov: Open even locked or enchanted objects". As you unfurl the scroll, there appears to be some writing on the inside surface of the parchment, but each line of text seems to disappear as soon as it is revealed.\',\n        text: "rezrov: Open even locked or enchanted objects",\n        use() {\n            game.log.p("You unfurl the scroll and read aloud the text on the inside surface. As you finish, the text fades away, and the scroll disappears! You have memorized \\"rezrov\\", an incantation capable of opening locked or closed things.");\n            this.listed = false;\n        },\n        cast() {\n            this.use.call(this);\n        },\n    };\n}',_sink:'(game) => {\n    return {\n        name: "sink",\n        listed: false,\n        description: "It is an old porcelain sink with separate taps for hot and cold water. Like everything else here, it is covered in dust and grime.",\n        use() {\n            game.log.p("You try to turn on the taps, but nothing comes out.");\n        },\n    };\n}',_sofa:'(game) => {\n    return {\n        name: "sofa",\n        flammable: true,\n        listed: false,\n        description: "The well-worn sitting room sofa is upholstered brown cowhide.",\n        burn() {\n            Object.getPrototypeOf(this).burnDown.call(this);\n        },\n    };\n}',_table:'{"name":"table","takeable":false,"listed":false,"description":"The cherrywood dining table is long enough to accomodate at least twenty guests, by your estimation, although you can see only one chair."}',_toilet:'(game) => {\n    return {\n        name: "toilet",\n        listed: false,\n        description: "You are surprised to find that the bowl of the very old porcelain toilet is still full of water.",\n        text: "Thomas Crapper & Co.",\n        flush() {\n            game.state.objectMode = false;\n            game.log.p("Having pushed the lever, and watched the water exit the bowl, you can personally verify that the toilet works as expected.");\n        },\n    };\n}',_wardrobe:'(game) => {\n    return {\n        name: "wardrobe",\n        takeable: false,\n        openable: true,\n        closed: true,\n        listed: false,\n        contents: [],\n        get description() {\n            const descriptionString = `The oak wardrobe is roughly four feet wide and seven feet in height and is currently${this.closed ? " closed" : " open"}. `;\n            if (this.closed) {\n                return descriptionString;\n            }\n            const contentsString = `There is ${this.contents.length < 1\n                ? "nothing"\n                : game.formatList(this.contents.map((item) => `${item.article} ${item.name}`))} inside.`;\n            return descriptionString + contentsString;\n        },\n    };\n}'};const P=eval;const B=function(e){const t=function(t){return Object.entries(t).reduce(((t,[n,o])=>{t[n]=o;try{"string"==typeof o&&(t[n]=P(o)),"function"==typeof t[n]&&(t[n]=t[n](e))}catch(e){try{"string"==typeof o&&(t[n]=JSON.parse(o))}catch(e){t[n]=o}}return t}),{})}(Y);e.items=t;const n=function(e){return{name:"Item",used:!1,weight:1,get description(){return`There is nothing particularly interesting about the ${this.name}.`},reverseDescription:null,takeable:!0,openable:!1,flammable:!1,activated:!1,closed:!1,locked:!1,article:"a",listed:!0,solution:null,points:1,count:0,proto:null,contents:[],unlockedBy:null,lockedTarget:null,closedTarget:null,containedPart:null,text:null,get lightCount(){return this.activated?this.count:0},burn:function(){e.state.objectMode=!1,e.inInventory("matchbook")?(e.items._matchbook.closed=!1,this.flammable?(e.log.p(`The match's flame proves to be enough to ignite the ${this.name}. You watch as the ${this.name} is quickly transformed into little more than a pile of ash.`),e.inEnvironment(this.name)?e.state.currentMapCell.removeFromEnv(this):e.inInventory(this.name)&&e.removeFromInventory(this)):e.log.p(`The meager flame is inadequate to ignite the ${this.name}.`)):e.log.p("You don't have the means to light a fire.")},burnDown:function(){Object.getPrototypeOf(this).burn.call(this),e.dead(`Unsatisfied after having consumed the ${this.name}, the fire quickly moves on to bigger and better things, like turning you and the house you are trapped in to a pile of smoldering embers.`)},climb:function(){e.state.objectMode=!1,e.log.p(`You attempt to scale the ${this.name}, but quickly slip, landing painfully on your back. That was pointless.`)},close:function(){e.state.objectMode=!1,e.inEnvironment(this.name)||e.inInventory(this.name)?this.openable?this.closed?e.log.p("It is already closed."):(e.log.p(`The ${this.name} is now closed.`),this.closed=!0,this.closedTarget&&(e.mapKey[this.closedTarget].closed=!0),this.containedPart&&(e.items[this.containedPart].closed=!0)):e.log.p("It cannot be closed."):e.log.p(`You don't see ${this.article} ${this.name} here.`)},correctGuess:function(){},incorrectGuess:function(){},decrementCounter:function(){1===this.lightCount&&e.inInventory(this.name)&&e.log.p(`The light from the ${this.name} fades.`),this.count=Math.max(this.count-1,0)},drink:function(){e.state.objectMode=!1,e.log.p(`You cannot drink the ${this.name}.`)},drop:function(){e.state.objectMode=!1,e.inInventory(this.name)?(e.removeFromInventory(this),e.state.score-=this.points,e.state.currentMapCell.visibleEnv.push(this),e.log.p(`${this.name} dropped.`)):e.log.p("You don't have that.")},eat:function(){e.state.objectMode=!1,e.log.p(`You cannot eat the ${this.name}.`)},examine:function(){e.state.objectMode=!1,e.log.p(this.description),this.activated&&this.lightCount>0&&e.log.p("Its glow illuminates the darkness.")},extinguish:function(){e.state.objectMode=!1,this.lightCount>0?(this.activated=!1,e.log.p(`You extinguish the ${this.name}.`)):e.log.p(`The ${this.name} is not lit.`)},flush:function(){e.state.objectMode=!1},frotz:function(){e.state.objectMode=!1,this.activated=!0,this.count=3,e.log.p(`Upon uttering the magic word, there is a flash, and then the ${this.name} begins to glow!`)},lock:function(){e.state.objectMode=!1,this.locked?e.log.p(`The ${this.name} is already locked.`):this.unlockedBy&&e.inInventory(this.unlockedBy)?(this.locked=!0,e.log.p(`Using the ${this.unlockedBy}, you lock the ${this.name}`),this.lockedTarget&&(e.mapKey[this.lockedTarget].locked=!0)):e.log.p(`You do not have the means to lock the ${this.name}.`)},move:function(){e.log.p(`You cannot move the ${this.name}`)},open:function(){e.state.objectMode=!1,e.inEnvironment(this.name)||e.inInventory(this.name)?this.openable?this.closed?this.locked?e.log.p("It appears to be locked."):(e.log.p(`The ${this.name} is now open.`),this.closed=!1,e.state.score+=this.points,this.points=0,this.closedTarget&&(e.mapKey[this.closedTarget].closed=!1),this.containedPart&&(e.items[this.containedPart].closed=!1)):e.log.p("It is already open."):e.log.p("It cannot be opened."):e.log.p(`You don't see ${this.article} ${this.name} here.`)},read:function(){e.state.objectMode=!1,this.text?e.inInventory(this.name)?(e.log.p(`The text on the ${this.name} reads: \n`),e.log.note(this.text)):e.log.p(`You will need to pick up the ${this.name} first.`):e.log.p("There is nothing to read.")},rezrov:function(){e.state.objectMode=!1,e.inInventory("scroll")||e.inEnvironment("scroll")?this.locked||this.closed?(e.log.p('Once the rezrov spell is cast, the magic scroll disappears with a sudden flash, and a loud "WHOMP!"'),e.log.p(`When the smoke has cleared, the ${this.name} has been magically unlocked and opened!`),this.locked&&(this.locked=!1,this.lockedTarget&&(e.mapKey[this.lockedTarget].locked=!1),e.log.p(`The ${this.name} is now unlocked.`)),this.closed&&(this.closed=!1,this.closedTarget&&(e.mapKey[this.closedTarget].closed=!1),e.log.p(`The ${this.name} is now open.`)),e.inInventory("scroll")?e.removeFromInventory(e.items._scroll):e.inEnvironment("scroll")&&e.state.currentMapCell.removeFromEnv(e.items._scroll)):e.log.p("The rezrov spell has no effect."):e.log.p("You are incapable of wielding such powerful magic unassisted.")},take:function(){e.state.objectMode=!1,this.takeable?(e.addToInventory([this]),e.state.score+=this.points,e.state.currentMapCell.removeFromEnv(this),e.log.p(`You pick up the ${this.name}.`)):e.log.p(`You cannot take the ${this.name}.`)},takeComponent:function(){const t=Object.getPrototypeOf(this);this.takeable&&e.inEnvironment(this.name)||e.log.p("You can't take that."),e.addToInventory([this]),e.state.currentMapCell.removeFromEnv(this),t.take.call(t)},turn:function(){e.state.objectMode=!1,e.log.p(this.reverseDescription?this.reverseDescription:`Turning the ${this.name} has no noticeable effect.`)},unlock:function(){e.state.objectMode=!1,this.locked?this.unlockedBy&&e.inInventory(this.unlockedBy)?(this.locked=!1,e.log.p(`Using the ${this.unlockedBy}, you are able to unlock the ${this.name}`),this.lockedTarget&&(e.mapKey[this.lockedTarget].locked=!1)):e.log.p(`You do not have the means to unlock the ${this.name}.`):e.log.p(`The ${this.name} is not locked.`)},use:function(){e.state.objectMode=!1,e.log.p(`Try as you might, you cannot manage to use the ${this.name}`)}}}(e);!function(e,t){for(const n in e){const o=e[n];Object.setPrototypeOf(o,t)}for(const t in e){const n=e[t];n.proto&&Object.setPrototypeOf(n,e[`_${n.proto}`])}}(t,n);const o=function(e,t){return Object.entries(e).reduce(((n,[o,i])=>{i.contents||(i.contents=[]);const a="_"===o[0]?o:`_${o}`;if(a in t){const n=t[a].map((t=>{const n="_"===t[0]?t:`_${t}`;return e[n]}));i.contents.push(...n)}return n[o]=i,n}),{})}(t,A);return o};const G={preface:"You slowly open your eyes. Your eyelids aren't halfway open before the throbbing pain in your head asserts itself. The last thing you can remember is taking your dog for a walk. Your current surroundings look entirely unfamiliar.",intro:e=>{e.log.title("consoleGame"),e.log.custom("by Dennis Hodges\ncopyright 2019-2023","font-size:100%;color:lightgray;padding:0 1em;"),e.log.intro("\nWelcome!\nAs a fan of old Infocom™ interactive fiction games, I thought it would be fun to hide a text adventure in the browser's JavaScript console. Try it out by typing in the console below. Have fun!\n"),e.log.codeInline(G.introOptions(e))},introOptions:e=>e.unfinishedGame()?["[ It looks like you have an unsaved game in progress from a previous session. If you would like to continue, type ","resume",". If you would like to load a saved game, type ","restore",". To begin a new game, please type ","start",". ]"]:["[ Please type ","help ","for instructions, ","restore ","to load a saved game, or ","start ","to begin a new game. ]"],captured:['As you step out onto the front porch, you struggle to see in the bright midday sun, your eyes having adjusted to the dimly lit interior of the house. You hear a surprised voice say, "Hey! How did you get out here?!" You spin around to see the source of the voice, but something blunt and heavy has other plans for you and your still aching skull. You descend back into the darkness of sleep.',"Groggily, you lift yourself from the floor, your hands probing the fresh bump on the back of your head."],winner:(e,t)=>{t&&e.log.win(t),e.log.win("You win!! Congratulations and thanks for playing!")},gameOver:e=>e.log.codeInline(["[Game over. Please type ","start ","to begin a new game.]"]),dead:"You have died. Of course, being dead, you are unaware of this unfortunate turn of events.",help:e=>{const t=`font-family:${l};color:pink;font-size:105%;line-height:1.5;`,n="font-family:courier;color:#29E616;font-size:115%;font-style:italic;line-height:2;",o="font-family:courier;color:#29E616;font-size:115%;line-height:1.5;",i=[t,o,n,o,n,t,o,n];e.log.inline(["Valid commands are one word long, with no spaces. Compound commands consist of at most two commands, separated by a carriage return or a semicolon. For example:\n","get\n","What would you like to take?\n","lamp\n","You pick up the lamp.\n","or,\n","get;lamp\n","What would you like to take?\nYou pick up the lamp."],i);e.log.codeInline(["Typing ","inventory ","or ","i ","will display a list of any items the player is carrying. \nTyping ","look ","or ","l ","will give you a description of your current environs in the game. \nCommands with prepositions are not presently supported, and ","look ",'can only be used to "look around", and not to "look at" something. Please instead use ',"examine ","or its shortcut ","x ","to investigate an item's properties. \nThe player may move in the cardinal directions– ","north",", ","south",", ","east"," and ","west ","as well as ","up ","and ","down. ","Simply type the direction you want to move. These may be abbreviated as ","n",", ","s",", ","e",", ","w",", ","u ","and ","d ",", respectively."],t,o);e.log.codeInline(["You may save your game progress (it will be saved to localStorage) by typing ","save",". You will then be asked to select a save slot, ","_0 ","through ","_9 ","(remember, user input can't begin with a number). Typing ","help ","will display the in-game help text."],t,o),e.log.codeInline(G.introOptions(e))},restore:(e,t)=>{e.log.codeInline(["saved games:\n",t]),e.log.codeInline(["Please choose which slot number (0 through 9) to restore from. To restore, type an underscore, ","_ ","immediately followed by the slot number."]);const n=t[0]||"_0";e.log.codeInline(["For example, type ",n,` to select slot ${n.slice(1)}.`])},save:e=>{e.log.codeInline(["Please choose a slot number (0 through 9) to save your game. To save to the selected slot, type an underscore, ","_"," immediately followed by the slot number."]),e.log.codeInline(["For example, type ","_3"," to select slot 3."])},doorLock:"You hear a short metallic scraping sound, ending in a click. It sounds like the front door being locked from the outside."};var L=[e=>{2!==e.state.turn||e.items._door.locked||(e.displayText(G.doorLock),e.items._door.closed=!0,e.items._door.locked=!0,e.mapKey[e.items._door.lockedTarget].locked=!0,e.mapKey[e.items._door.closedTarget].closed=!0)},e=>{if(e.state.turn>=e.timeLimit&&!e.state.gameOver)return e.dead("You don't feel so well. It never occurs to you, as you crumple to the ground, losing consciousness for the final time, that you have been poisoned by an odorless, invisible, yet highly toxic gas.")},e=>{e.lightSources.forEach((e=>e.decrementCounter()))},e=>{e.inEnvironment("grue")&&e.items._grue.lurk()}];const D=["help","start","commands","inventory","inventorytable","look","font","color","size","save","restore","resume","verbose","quit","again","yes","score","_0","_1","_2","_3","_4","_5","_6","_7","_8","_9","poof"];class H{constructor(e){this.timers=[],this.game=e,L.forEach(((e,t)=>{this.registerTimer(`timer_${t}`,e)})),this.executeCommand=this.executeCommand.bind(this),this.registerTimer=this.registerTimer.bind(this),this.removeTimer=this.removeTimer.bind(this),this.runTimers=this.runTimers.bind(this)}executeCommand(e,t){const n=globalThis;if(this.game.state.gameOver){if("start"===e)return this.game.start(),this.game.variableWidthDivider();this.game.displayText(this.game.descriptions.gameOver)}else{n.CONSOLE_GAME_DEBUG&&n.debugLog.push({userInput:e});try{return t(e),D.includes(e)||(this.game.addToHistory(e),this.game.state.objectMode||this.game.state.abortMode||(this.runTimers(),this.game.state.turn++),this.game.state.abortMode=!1,this.game.state.verbose&&this.game.describeSurroundings()),this.game.variableWidthDivider()}catch(e){return console.trace(e),this.game.log.p("That's not going to work. Please try something else."),this.game.variableWidthDivider()}}}runTimers(){this.timers.forEach((e=>{e.function(this.game)}))}registerTimer(e,t){this.timers.push({name:e,function:t})}removeTimer(e){this.timers="string"==typeof e?this.timers.filter((t=>t.name!==e)):this.timers.filter((t=>t.function!==e))}hasTimer(e){return"string"==typeof e?this.timers.some((t=>t.name===e)):this.timers.some((t=>t.function===e))}}const W=["open","close","status","inspect","table","screen","scroll"];class F{constructor(e){this.game=e,this.bindCommandToFunction=this.bindCommandToFunction.bind(this),this.bindCommands=this.bindCommands.bind(this)}bindCommandToFunction(e,t,n){const o=t.split(","),[i]=o,a=n?n.bind(this.game,i,e.bind(this.game)):e.bind(this.game,i);try{o.forEach((e=>{e in globalThis&&!W.includes(e)||Object.defineProperty(globalThis,e.trim(),{get:()=>a()})}))}catch(e){}}bindCommands(e){e.forEach((e=>{var t;let[n,o]=e;this.bindCommandToFunction(n,o,null===(t=this.game.turnDaemon)||void 0===t?void 0:t.executeCommand)}))}}const{getStorage:N,removeStorage:R,setStorage:q}=e;let K;class U{constructor(){this.state={},this.maps=[],this.mapKey={},this.items={},this.commands={},this.commandList=[],this.timeLimit=300,this.log=C,this.confirmationCallback=()=>{},this.lightSources=[],this.descriptions={},this.turnDaemon=null,this.commandBinder=null,this.initialState={solveMode:!1,prefMode:!1,restoreMode:!1,gameOver:!1,pendingAction:null,turn:0,score:0,dogName:null,inventory:[],startPosition:{z:3,y:13,x:7},position:{z:3,y:13,x:7},history:[],get currentCellCode(){return K.maps[this.position.z][this.position.y][this.position.x]},get currentMapCell(){return K.mapKey[this.currentCellCode]},get env(){return this.currentMapCell.env},get combinedEnv(){return Object.values(this.env).flat()}};const e=globalThis;K=this,e._=this.setValue.bind(this),e.debugLog=[],this.descriptions=G,this.turnDaemon=new H(this),this.commandBinder=new F(this),this.bindInitialCommands(),this.log.tiny("Game initialized.")}bindInitialCommands(){var e;const t=[[this.start,i("start",S)],[this.resume,o("resume")],[this.help,i("help",S)],[this.restore,o("restore","load")],[this.quit,o("quit","restart")],[this.save,o("save")],[this.saveSlot,"_0"],[this.saveSlot,"_1"],[this.saveSlot,"_2"],[this.saveSlot,"_3"],[this.saveSlot,"_4"],[this.saveSlot,"_5"],[this.saveSlot,"_6"],[this.saveSlot,"_7"],[this.saveSlot,"_8"],[this.saveSlot,"_9"],[this.pref,o("font")],[this.pref,o("color")],[this.pref,o("size")],[this.yes,o("yes")+",y,Y"]];null===(e=this.commandBinder)||void 0===e||e.bindCommands(t)}initializeNewGame(){var e;this.resetGame(),this.maps=z,this.descriptions=G,this.items=a(B(this)),this.commandList=function(e){const t=t=>{e.state.objectMode=!1;let n={x:e.state.position.x,y:e.state.position.y,z:e.state.position.z};switch(t){case"north":n.y=n.y-1;break;case"south":n.y=n.y+1;break;case"east":n.x=n.x+1;break;case"west":n.x=n.x-1;break;case"up":n.z=n.z+1;break;case"down":n.z=n.z-1}const o=z[n.z][n.y][n.x];return"*"===o?(e.log.p("You can't go that direction."),void(e.state.abortMode=!0)):e.mapKey[o].locked||e.mapKey[o].closed?(e.log.p("The way is blocked."),void e.log.p(e.mapKey[o].lockText&&(e.mapKey[o].locked||e.mapKey[o].closed)?e.mapKey[o].lockText:"")):(e.log.p(`You walk ${t}...`),e.state.position={x:n.x,y:n.y,z:n.z},e.describeSurroundings())},n=t=>{e.state.objectMode=!0,e.state.pendingAction=t,e.log.p(`What would you like to ${t}?`)},a=()=>{},r=t=>{if(!e.state.objectMode&&"maps"!==t)return void e.log.invalid("Invalid command.");const n=e.inEnvironment(t)||e.inInventory(t);if(!n)return e.state.objectMode=!1,void e.log.p(`The ${t} is unavailable.`);n[e.state.pendingAction]()},l=[[t,o("north")+",n,N"],[t,o("south")+",s,S"],[t,o("east")+",e,E"],[t,o("west")+",w,W"],[t,o("up")+",u,U"],[t,o("down")+",d,D"],[()=>{e.log.p("Which direction do you want to go?")},i("go",S)],[t=>{let n=[],o=[];e.state.inventory.forEach((e=>{if(e.listed){n.push(e.name);const t=e.article?`${e.article} ${e.name}`:e.name;o.push(t)}}));let i=`You are carrying ${s(o)}`.split(" "),a=i.map((e=>{let t=c;return n.map((n=>{e.includes(n)&&(t="font-size:120%;color:cyan;font-style:italic;")})),t}));return i=i.map(((e,t)=>t===i.length-1?`${e}.`:`${e} `)),e.log.inline(i,a)},i("inventory",S)+",i,I"],[t=>{e.log.p(e.state.currentMapCell.sound)},i("listen",S)],[t=>e.describeSurroundings(),i("look",S)+",l,L"],[t=>{e.log.p(e.state.currentMapCell.smell)},i("smell",S)],[()=>{e.log.p("Time passes...")},i("wait",S)+",z,Z,zzz,ZZZ,Zzz"],[()=>{e.log.scream("Aaaarrgh!!!!")},i("yell",S)],[()=>{e.again()},i("again",S)+",g,G"],[n,i("burn",S)],[n,i("climb",S)],[n,i("close",S)],[n,i("contemplate",S)],[n,i("drink",S)],[n,i("drop",S)],[n,i("eat",S)],[n,i("examine",S)+",x,X"],[n,i("extinguish",S)],[n,i("flush",S)],[n,i("light",S)],[n,i("lock",S)],[n,i("move",S)],[n,i("open",S)],[n,i("play",S)],[n,i("project",S)],[n,i("pull",S)],[n,i("read",S)],[n,i("rezrov",S)],[n,i("frotz",S)],[n,i("cast",S)],[n,i("rescue",S)],[n,i("spray",S)],[n,i("take",S)],[n,i("turn",S)],[n,i("unlock",S)],[n,i("use",S)],[()=>{const t=e.commandList.map((([e,t])=>t)).reduce(((e,t)=>{const[n,...o]=t.split(",");return e[n]=o.join(", "),e}),{});e.log.table(t)},o("commands")+",c,C"],[t=>{const n=e.state.inventory.map((e=>{const{name:t,description:n}=e;return{name:t,description:n}}));return e.log.table(n,["name","description"])},o("inventoryTable","invTable","invt")],[()=>{if(e.state.verbose)return e.state.verbose=!1,void e.log.p("Verbose mode off.");e.state.verbose=!0,e.log.p("Maximum verbosity.")},o("verbose")],[()=>{e.log.p(`Your score is ${e.state.score} in ${e.state.turn} turns.`)},o("score")],[()=>{var t;const n=document.querySelector("body");null===(t=null==n?void 0:n.parentNode)||void 0===t||t.removeChild(n),e.log.papyracy(">poof<")},o("poof")],[a,o("globaa")],[a,o("thia")]];return[...l,...Object.keys(e.items).map((e=>e.slice(1))).map((e=>[r,i(e,S)]))]}(this),this.commands=this.getCommandsObject(this.commandList),null===(e=this.commandBinder)||void 0===e||e.bindCommands(this.commandList),this.mapKey=function(e){const t=function(e){return{name:"Nowhere",locked:!1,lockText:"",unlockText:"",hiddenSecrets:!1,get hideSecrets(){return![...this.visibleEnv,...e.state.inventory].some((e=>e.lightCount>0))&&this.hiddenSecrets},set hideSecrets(e){this.hiddenSecrets=e},description:"You find yourself in a non-descript, unremarkable, non-place. Nothing is happening, nor is anything of interest likely to happen here in the future.",smell:"Your nose is unable to detect anything unusual, beyond the smell of age and decay that permeates the entirety of the decrepit building.",sound:"The silence is broken only by the faint sound of the wind outside, and the occasional creak of sagging floorboards underfoot.",hiddenEnv:[],visibleEnv:[],get env(){return{visibleEnv:this.visibleEnv,containedEnv:this.containedEnv,hiddenEnv:this.hideSecrets?[]:this.hiddenEnv}},get openContainers(){return(this.hideSecrets?this.visibleEnv:[...this.visibleEnv,...this.hiddenEnv]).filter((e=>e.contents&&e.contents.length>0)).filter((e=>!e.closed))},get containedEnv(){return(this.openContainers.length>0?this.openContainers.map((e=>e.contents||[])):[]).flat()},removeFromEnv:function(t){const n="string"==typeof t?t:t.name,o=e.fromWhichEnv(n);if("containedEnv"===o)this.removeFromContainer(n);else if(o){const e=this[o].filter((e=>e.name!==n));this[o]=e}else e.log.error(`Item ${n} not found in any environment`)},removeFromContainer:function(t){var n;const o="string"==typeof t?t:t.name,[i]=this.openContainers.filter((e=>(e.contents||[]).map((e=>e.name)).includes(o)));if(i||e.log.error(`Item ${o} not found in any container`),e.inEnvironment(i.name)){const e=null===(n=i.contents)||void 0===n?void 0:n.filter((e=>e.name!==o));i.contents=e}else e.log.error(`Container ${i.name} not in environment`)},addToEnv:function(t){const n=e.items[`_${t}`];return this.visibleEnv.push(n)}}}(e),n={0:{locked:!0,lockText:"An attempt has been made to board up this door. Reaching between the unevenly spaced boards, you try the doorknob and discover that it is also locked."},A:{name:"Freedom!",locked:!1,closed:!0,get lockText(){return`The formidable wooden front door will not open. It looks as old as the rest of the building, and like the wood panelled walls of the entrance hall, it is dark with countless layers of murky varnish. It is ${this.locked?"locked":"unlocked"}.`},get description(){return e.state.turn<3?(e.captured(),e.variableWidthDivider()):(e.state.score+=50,e.winner("\nYou have escaped!\n"),e.variableWidthDivider())}},a:{name:"Freedom!",locked:!0,closed:!0,get lockText(){return`The kitchen door will not open. It is ${this.locked?"locked":"unlocked"}.`},get description(){return e.state.turn<3?(e.captured(),""):e.winner("\nYou have escaped!\n")}},B:{name:"Basement",description:"A single dim bulb, dangling on a cord from the low, unfinished ceiling, is barely enough to illuminate the room. The floors appear to be composed of compressed earth, left unfinished since the space was initially excavated more than a century ago.  ",smell:"It smells strongly of old, damp basement – a mix of dirt and mildew with perhaps a hint of rodent feces.",get sound(){return`You can hear a dog barking. The sound is emanating from the room north of you. It is loud enough now for you to recognize it as ${e.state.dogName}'s bark!`}},C:{name:"Dark room",hiddenSecrets:!0,get des1(){return`As you walk into the dark room, it feels as if the increasingly uneven floor is sloping downward, though you can see nothing. \nIt is pitch black. You are likely to be eaten by a grue. \nSomewhere in the dark, you can hear ${e.state.dogName} barking excitedly!`},get des2(){return"By the flickering light of the flame, you can see that the floor becomes rougher and more irregular, sloping down toward the north."},smell:"It smells strongly of old, damp dungeon – a mix of dirt and mildew with perhaps a hint of grue feces.",get description(){return this.hideSecrets?this.des1:this.des2},hiddenEnv:["lantern","basement_door"],visibleEnv:["grue"]},D:{name:"Bathroom",description:"The bathroom is tiled with hundreds of tiny, white, hexagonal tiles. It features the usual bathroom amenities, like a sink, a tub and a commode.",visibleEnv:["sink","bathtub","toilet","knife"]},E:{name:"Guest Room",description:"The guest room is modestly furnished, with little more than a small bed and a dresser.",visibleEnv:["bed","dresser","dresser_drawer"]},F:{name:"Sitting room",description:"A small sitting room adjoins the master bedroom. It contains a cushioned armchair and a small sofa, both facing a coffee table.",visibleEnv:["chair","sofa","coffee_table","photo"]},G:{name:"Master bedroom",get description(){return"The master bedroom is spacious though sparsely furnished, containing only a bedframe, a wardrobe and a nightstand"},visibleEnv:["bed","nightstand","nightstand_drawer","wardrobe"]},H:{name:"Master bathroom",description:"The bathroom adjoining the bedroom has all of the expected fixtures, though they are corroded and covered in filth. ",visibleEnv:["toilet","sink","bathtub"]},I:{name:"Cell",description:"It is a dark and scary cell.",locked:!0,closed:!0,smell:"It smells like dog waste.",get lockText(){return`An ominous-looking, rusted steel door blocks your path. It is ${this.locked?"locked":"unlocked"}.`},visibleEnv:["dog"]},J:{name:"Parlor",get description(){return`This room looks like it was used to screen films and recordings. There is a tall white pedestal${e.inEnvironment("projector")?", supporting a squarish plastic Super 8 projector,":""} in the center of the room. `},visibleEnv:["projector","screen","pedestal","chair","phonograph"]},"^":{name:"Second floor hallway, north",description:"You are at the top of a wide wooden staircase, on the second floor of the old house.",visibleEnv:[]},"-":{name:"Second floor hallway, south",description:"It looks like there are a couple of rooms on either side of the broad hallway, and a small broom closet at the south end.",visibleEnv:[]},"+":{name:"Study",visibleDescription:"The walls of the dark, wood-panelled study are lined with bookshelves, containing countless dusty tomes. Behind an imposing walnut desk is a tall-backed desk chair.",smell:"The pleasantly musty smell of old books emanates from the bookshelves that line the wall.",hideSecrets:!0,visibleEnv:["desk","painting","chair","bookshelves","books","drawer","booklet"],hiddenEnv:["safe","keypad"],hiddenDescription:"In space where a painting formerly hung there is a small alcove housing a wall safe.",get description(){return this.hideSecrets?this.visibleDescription+"\nOn the wall behind the chair hangs an ornately framed painting.":this.visibleDescription+"\n\n"+this.hiddenDescription}},"#":{name:"Staircase landing",description:"You are on the landing of a worn oak staircase connecting the first and second floors of the old abandoned house.",visibleEnv:[]},"%":{name:"Entrance hall, south",description:"You are in the main entrance hall of a seemingly abandoned house. There are two doors on either side of the hall. The front door is to the south. At the north end of the hall is a wide oak staircase that connects the first and second floors of the old house.",visibleEnv:["door","note"]},"=":{name:"Entrance hall, north",description:"You are in the main entrance hall of a seemingly abandoned house. There are two doors on either side of the hall. The front door is to the south. At the rear of the hall is a wide oak staircase that connects the first and second floors of the old house.",visibleEnv:[]},"@":{name:"Stone staircase, top",description:"You are at the top of a stone staircase that leads down to the basement. A faint cold draft greets you from below.",smell:"A vaguely unfresh scent wafts up from the basement.",visibleEnv:["collar"],sound:"You do not hear anything."},"(":{name:"Stone staircase, landing",description:"You are standing on a stone staircase leading to the basement. A faint cold draft greets you from below.",smell:"As you descend, the smell of mildew and earth becomes noticeable.",sound:"For a moment, you are certain you can hear what sounds like muffled barking, but when you stop moving and strain to hear it again, the sound has stopped."},")":{name:"Stone staircase, bottom",description:"You are standing on a stone staircase leading upwards to the first floor.",smell:"It smells strongly of old, damp basement – a mix of dirt and mildew with perhaps a hint of rodent feces.",sound:"You can definitely hear the sound of distant, muffled barking. It is coming from the east!"},$:{name:"Broom closet",hiddenSecrets:!0,hiddenEnv:["glove"],visibleEnv:["chain"],des1:"The small closet is dark, although you can see a small chain hanging in front of you.",get des2(){const e=this.hiddenEnv,t=e.length>1?"y":"ies";return"The inside of this small broom closet is devoid of brooms, or much of anything else, for that matter"+(e.length?`, with the exception of ${s(e.map((e=>`${e.article} ${e.name}`)))} which occup${t} a dusty corner.`:".")},get description(){return this.hideSecrets?this.des1:this.des2}},X:{name:"Dining room",visibleEnv:["chair","table"],description:"A long cherry dining table runs the length of this formal dining room."},Z:{name:"Kitchen",visibleEnv:["maps","backdoor"],description:"It is quite large for a residential kitchen. While only a few of the original appliances remain, gritty outlines on the walls and floor suggest it was once well appointed. Now it is an echoing tile cavern.",smell:"It smells like a dusty abandoned building. And chicken soup."}};return((e,o=t)=>{Object.keys(e).forEach((e=>{Object.setPrototypeOf(n[e],o)}))})(n),(t=>{Object.keys(t).forEach((n=>{const o=Object.keys(t[n]).filter((e=>e.toLowerCase().includes("env")));for(const i of o){let o=t[n][i],a=[];o.length&&o.forEach((t=>{let n="string"==typeof t?e.items[`_${t}`]:t;n?a.push(n):console.log(`Cannot stock ${t}. No such item.`)})),t[n][i]=a}}))})(n),n}(this),this.addToInventory(["no_tea","me"])}resetGame(){this.state=a(this.initialState),this.state.dogName=E[Math.floor(Math.random()*E.length)],R("history"),this.state.gameOver=!1}getCommandsObject(e){return e.reduce(((e,t)=>{const[n,o]=t,[i]=o.split(",");return e[i.trim()]=n.bind(this),e}),{})}addToHistory(e){this.state.history.push(e),q("history",this.state.history)}addToInventory(e){e.forEach((e=>{"string"==typeof e?this.state.inventory.push(this.items[`_${e}`]):this.state.inventory.push(e)}))}removeFromInventory(e){const t=this.state.inventory.filter((t=>"string"==typeof e?t.name!==e:t.name!==e.name));this.state.inventory=t}unfinishedGame(){return N("history")}replayHistory(e){this.state.restoreMode=!1,this.log.groupCollapsed("Game loading..."),e.forEach((e=>{Function(`${e}`)()})),this.log.groupEnd("Game loaded.")}fromWhichEnv(e){if(!this.state.combinedEnv.map((e=>e.name)).includes(e))return!1;return Object.entries(this.state.env).reduce(((t,n)=>((n[1].length?n[1].map((e=>e.name)):[]).includes(e)&&(t=n[0]),t)),!1)}inEnvironment(e){if("all"===e)return this.items._all;const t=this.fromWhichEnv(e);return!!t&&this.state.env[t].filter((t=>t.name===e))[0]}inInventory(e){if("all"===e)return this.items._all;const[t]=this.state.inventory.filter((t=>t.name===e));return t}displayText(e,t){if("function"==typeof e){const n=e(this,t);"string"==typeof n&&this.displayText(n)}else Array.isArray(e)?e.forEach((e=>this.displayText(e))):e&&this.log.p(e)}currentHeader(e=window.innerWidth){const t=this.state.currentMapCell.name,n=`Turn : ${this.state.turn}`,o=e/12-t.length-n.length;return`\n${t}${" ".repeat(o)}${n}\n`}describeSurroundings(){const e=this.state.currentMapCell.description,t=this.itemsInEnvironment()?`You see ${this.itemsInEnvironment()} here.`:"",n=this.nestedItemString(),o=`You can go ${this.movementOptions()}.`;this.log.header(this.currentHeader()),this.log.p(e+"\n"+o+"\n"+t+"\n"+n)}itemsInEnvironment(){const e=(this.state.currentMapCell.hideSecrets?this.state.env.visibleEnv:[...this.state.env.visibleEnv,...this.state.env.hiddenEnv]).filter((e=>e.listed));return e.length&&s(e.map((e=>`${e.article} ${e.name}`)))}nestedItemString(){return this.state.currentMapCell.openContainers.map((e=>{const t=`${e.article} ${e.name}`,n=e.contents.map((e=>`${e.article} ${e.name}`));return[t,n.length?s(n):void 0]})).map((e=>e[1]?`There is ${e[0]}, containing ${e[1]}.`:"")).join("\n")}formatList(e){return s(e)}possibleMoves(e,t,n){return[void 0!==this.maps[e][t-1]&&"*"!==this.maps[e][t-1][n]&&"north",void 0!==this.maps[e][t+1]&&"*"!==this.maps[e][t+1][n]&&"south",void 0!==this.maps[e][t][n+1]&&"*"!==this.maps[e][t][n+1]&&"east",void 0!==this.maps[e][t][n-1]&&"*"!==this.maps[e][t][n-1]&&"west",void 0!==this.maps[e+1]&&"*"!==this.maps[e+1][t][n]&&"up",void 0!==this.maps[e-1]&&"*"!==this.maps[e-1][t][n]&&"down"].filter((e=>e))}movementOptions(){return s(this.possibleMoves(this.state.position.z,this.state.position.y,this.state.position.x),!0)}variableWidthDivider(e=window.innerWidth){return" ".repeat(e/8)}getSavedGames(){return Object.keys(N()).filter((e=>e.includes("ConsoleGame.save"))).map((e=>e.slice(-2)))}intro(){this.displayText(G.intro)}captured(){this.displayText(G.captured[0]),this.state.position=this.state.startPosition,this.state.turn+=3;for(let e=0;e<3;e++)this.commands.wait;this.items._door.closed=!0,this.items._door.locked=!0,this.mapKey[this.items._door.lockedTarget].locked=!0,this.mapKey[this.items._door.closedTarget].closed=!0,this.displayText(G.captured[1])}winner(e){e&&this.displayText(e),this.displayText(G.winner,e),this.quit()}dead(e){this.displayText(G.dead,e),this.quit()}getFloorMap(e=!0){const t=this.state.position,n=this.maps[t.z].map((e=>e.map((e=>"*"===e?"⬛️":"🌫"))));return n[t.y].splice(t.x,1,"⭐️"),e?(e=>{const t=e.findIndex((e=>e.some((e=>"⬛️"!==e))))-1,n=e.length-[...e].reverse().findIndex((e=>e.some((e=>"⬛️"!==e))))+1,o=e.map((e=>{const t=e.findIndex((e=>"⬛️"!==e));return-1===t?e.length:t})),i=Math.max(Math.min(...o)-1,0),a=e.map((e=>{const t=[...e].reverse().findIndex((e=>"⬛️"!==e));return-1===t?0:e.length-t})),s=Math.min(Math.max(...a)+1,e[0].length);return e.slice(t,n).map((e=>e.slice(i,s)))})(n):n}displayHTMLMap(e){const t=document.getElementById("console-game-content");if(t){t.innerHTML="",t.setAttribute("style","width:100vw;background-color:inherit;color:inherit;position:relative;display:flex;flex-direction:column;justify-content:center;align-content:center;");const n=document.createElement("div");n.setAttribute("style","width:100vw;height:100vh;position:absolute;top:0;left:0;overflow:auto;");const o=document.createElement("table");o.setAttribute("style","width:100vw;height:100vh;position:absolute;top:0;left:0;overflow:auto;border:none;"),e.forEach((e=>{const t=document.createElement("tr");t.setAttribute("style","border:none;"),e.forEach((e=>{const n=document.createElement("td");"⭐️"===e&&(n.innerHTML=e),n.setAttribute("style","width:1em;height:1em;font-size:1em;text-align:center;vertical-align:middle;"+("⬛️"===e?"background-color:black;border:none;":"background-color:white;")),t.appendChild(n)})),o.appendChild(t)})),n.appendChild(o),t.appendChild(n)}}displayItem(e={title:"untitled",artist:"unknown",info:null,source:"",dimensions:null,width:null,height:null}){var t;const n=document.getElementById("console-game-content");if(n){null===(t=this.turnDaemon)||void 0===t||t.removeTimer("map"),n.innerHTML="",n.setAttribute("style","width:100vw;background-color:inherit;color:inherit;position:relative;display:flex;flex-direction:column;justify-content:center;align-content:center;");const o=document.createElement("iframe");o.src=e.source,o.setAttribute("style",`width:${e.width?e.width:"min(38vw,720px)"};height:${e.height?e.height:"min(25vw,480px)"};margin:auto`);const i=document.createElement("p"),a=document.createElement("h2");a.setAttribute("style","color:inherit;");const s=document.createElement("h2");if(s.setAttribute("style","color:inherit;"),a.innerHTML=`Title: ${e.title}`,s.innerHTML=`Artist: ${e.artist}`,i.appendChild(a),i.appendChild(s),n.appendChild(o),n.appendChild(i),e.info){const t=document.createElement("p");t.innerHTML=e.info,t.setAttribute("style","color:inherit;font-style:italic;font-size:1em;padding-bottom:2em;"),n.appendChild(t)}}}again(){const e=this.state.history[this.state.history.length-1];if(Object.keys(this.items).map((e=>e.slice(1))).includes(e)){this.commands[this.state.pendingAction].call(this,this.state.pendingAction)}this.commands[e].call(this,e)}help(){this.displayText(G.help)}start(){const{turn:e,gameOver:t}=this.state;e&&!t||(this.initializeNewGame(),this.displayText(this.descriptions.preface)),this.describeSurroundings()}resume(){const e=this.unfinishedGame();this.state.prefMode=!1,(null==e?void 0:e.length)?(this.resetGame(),this.initializeNewGame(),this.replayHistory(e),this.describeSurroundings()):this.state.turn?this.describeSurroundings():this.commands.start()}restore(e){const t=this.getSavedGames();if(!(t.length>0))return this.log.invalid("No saved games found.");this.displayText(this.descriptions.restore,t),this.state.restoreMode=!0,this.state.saveMode=!1,this.state.pendingAction=e}quit(){this.commands.score(),R("history"),this.state.gameOver=!0,this.displayText(this.descriptions.gameOver)}save(e){this.state.saveMode=!0,this.state.restoreMode=!1,this.state.pendingAction=e,this.displayText(this.descriptions.save)}saveSlot(e){if(this.state.saveMode)try{return this.saveGame(e)}catch(t){this.log.invalid(`Save to slot ${e} failed.`),this.log.error(t)}else if(this.state.restoreMode)try{this.restoreGame(e),this.state.restoreMode=!1}catch(t){return this.log.invalid(`Restore from slot ${e} failed.`),this.log.error(t)}else this.log.invalid("Operation failed.")}pref(e){this.state.prefMode=!0,this.state.pendingAction=e,this.log.codeInline([`To set the value of ${e}, you must type an underscore `,"_",", followed by the value enclosed in backticks ","`","."]),this.log.codeInline(["For example: ","_`value`"])}yes(){if(this.state.confirmMode){if(this.state.confirmMode=!1,this.confirmationCallback)return this.confirmationCallback()}else this.log.p("nope.")}saveGame(e,t=!1){const n=`save.${e}`;if(N(n)&&!t)this.log.invalid("That save slot is already in use."),this.log.codeInline(["type ","yes ",`to overwrite slot ${e} with current game data.`]),this.state.confirmMode=!0,this.confirmationCallback=()=>this.saveGame(e,!0);else{this.state.saveMode=!1,this.state.confirmMode=!1;try{q(n,this.state.history),this.log.info(`Game saved to slot ${e}.`),this.describeSurroundings()}catch(t){this.log.invalid(`Save to slot ${e} failed.`),this.log.error(t)}}}restoreGame(e){this.state.restoreMode=!1;const t=N(`save.${e}`);this.initializeNewGame(),this.replayHistory(t),this.describeSurroundings()}solveCode(e){e=String(e),this.state.solveMode=!1;const t=this.state.combinedEnv.filter((e=>e.solution));if(console.log("puzzles",t),t.length){const n=t.filter((t=>t.solution===e));0===n.length?t.forEach((e=>e.incorrectGuess&&e.incorrectGuess())):n.forEach((e=>e.correctGuess&&e.correctGuess()))}}setPreference(e){this.log.info(`Value for ${this.state.pendingAction} will be set to ${e}`),q(`prefs.${this.state.pendingAction}`,e),q("prefMode","true"),this.log.info("Reload the page to apply the new preference.")}setValue(e){return this.state.solveMode?(this.addToHistory(`_("${e}")`),this.solveCode(e)):this.state.prefMode?this.setPreference(e):this.log.invalid("setValue _() called out of context."),this.variableWidthDivider()}toggleVerbosity(){this.state.verbose?(this.state.verbose=!1,this.log.p("Verbose mode off.")):(this.state.verbose=!0,this.log.p("Maximum verbosity."))}}window.CONSOLE_GAME_DEBUG=!0,window.onload=()=>{const t=new U;window.game=t;if(!e.getStorage("prefMode"))return t.intro();e.removeStorage("prefMode"),t.resume()},window.scroll(0,0)}();
//# sourceMappingURL=index.js.map
